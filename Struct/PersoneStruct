/**
 * @author Zanforlin Nicol√≤
 * @date 22/10/2025
 * @brief Programma che gestisce un array di persone e determina informazioni richieste
 */

#include <stdio.h>
#include <string.h>

#define DIM 50
#define MAX_PERSONE 5

typedef struct
{
    char nome[DIM];
    char cognome[DIM];
    int eta;
    char codice_fiscale[DIM];
    int reddito_annuo;
    int anno_nascita;
    char residenza[DIM];
} Persona;

int main()
{
    Persona persone[MAX_PERSONE];
    int n_persone, scelta;

    do
    {
        printf("Quante persone vuoi inserire (1-%d): ", MAX_PERSONE);
        scanf("%d", &n_persone);
    } while (n_persone < 1 || n_persone > MAX_PERSONE);

    inserisci_persone(persone, n_persone);

    do
    {
        do
        {
            printf("\n=== MENU ===\n");
            printf("1. Visualizza persone con redditi estremi\n");
            printf("2. Ordina lista per anno di nascita (anziano-giovane)\n");
            printf("3. Ricerca per codice fiscale\n");
            printf("4. Visualizza persone con reddito >= valore\n");
            printf("5. Calcola la media dei redditi\n");
            printf("6. Visualizza persone per anno di nascita\n");
            printf("0. Esci\n");
            printf("Inserisci scelta: ");
            scanf("%d", &scelta);
        } while (scelta < 0 || scelta > 6);

        switch (scelta)
        {
        case 1:
        {
            Persona *max_reddito, *min_reddito;
            trova_reddito_estremi(persone, n_persone, &max_reddito, &min_reddito);
            printf("\nReddito piu' alto:\n");
            printf("Nome, Cognome, Residenza, Reddito\n");
            printf("%s %s, %s, %d\n", (*max_reddito).nome, (*max_reddito).cognome, (*max_reddito).residenza, (*max_reddito).reddito_annuo);
            printf("\nReddito piu' basso:\n");
            printf("Nome, Cognome, Residenza, Reddito\n");
            printf("%s %s, %s, %d\n", (*min_reddito).nome, (*min_reddito).cognome, (*min_reddito).residenza, (*min_reddito).reddito_annuo);
            break;
        }
        case 2:
            ordina_per_anno_nascita(persone, n_persone);
            printf("\nLista ordinata per anno di nascita:\n");
            for (int i = 0; i < n_persone; i++)
                stampa_persona(persone[i]);
            break;
        case 3:
        {
            char codice_ricerca[DIM];
            printf("Inserisci il codice da cercare: ");
            scanf("%s", codice_ricerca);
            cerca_per_codice_fiscale(persone, n_persone, codice_ricerca);
            break;
        }
        case 4:
        {
            int reddito_scelto;
            printf("Inserisci il reddito: ");
            scanf("%d", &reddito_scelto);
            filtra_per_reddito(persone, n_persone, reddito_scelto);
            break;
        }
        case 5:
        {
            double media = calcola_media_redditi(persone, n_persone);
            printf("Media redditi: %.2f\n", media);
            break;
        }
        case 6:
        {
            int anno_ricerca;
            printf("Inserisci l'anno da cercare: ");
            scanf("%d", &anno_ricerca);
            visualizza_per_anno(persone, n_persone, anno_ricerca);
            break;
        }
        case 0:
            printf("Uscita dal programma\n");
            break;
        default:
            break;
        }

    } while (scelta != 0);

    return 0;
}

void stampa_persona(Persona p)
{
    printf("Nome: %s, Cognome: %s, Eta': %d, C.F.: %s, Reddito: %d, Anno: %d, Residenza: %s\n",
           p.nome, p.cognome, p.eta, p.codice_fiscale, p.reddito_annuo, p.anno_nascita, p.residenza);
}

void inserisci_persone(Persona persone[], int n_persone)
{
    for (int i = 0; i < n_persone; i++)
    {
        printf("\nInserimento persona %d\n", i + 1);
        printf("Nome: ");
        scanf("%s", persone[i].nome);
        printf("Cognome: ");
        scanf("%s", persone[i].cognome);
        printf("Eta': ");
        scanf("%d", &persone[i].eta);
        printf("Codice fiscale: ");
        scanf("%s", persone[i].codice_fiscale);
        printf("Reddito annuo: ");
        scanf("%d", &persone[i].reddito_annuo);
        printf("Anno di nascita: ");
        scanf("%d", &persone[i].anno_nascita);
        printf("Residenza (citta'): ");
        scanf("%s", persone[i].residenza);
    }
}

void trova_reddito_estremi(Persona persone[], int n_persone, Persona **max, Persona **min)
{
    *max = &persone[0];
    *min = &persone[0];
    for (int i = 1; i < n_persone; i++)
    {
        if (persone[i].reddito_annuo > (*max)->reddito_annuo)
            *max = &persone[i];
        if (persone[i].reddito_annuo < (*min)->reddito_annuo)
            *min = &persone[i];
    }
}

void ordina_per_anno_nascita(Persona persone[], int n_persone)
{
    for (int i = 0; i < n_persone - 1; i++)
    {
        for (int j = 0; j < n_persone - i - 1; j++)
        {
            if (persone[j].anno_nascita > persone[j + 1].anno_nascita)
            {
                Persona temp = persone[j];
                persone[j] = persone[j + 1];
                persone[j + 1] = temp;
            }
        }
    }
}

void cerca_per_codice_fiscale(Persona persone[], int n_persone, char codice[])
{
    for (int i = 0; i < n_persone; i++)
    {
        if (strcmp(persone[i].codice_fiscale, codice) == 0)
        {
            stampa_persona(persone[i]);
            return;
        }
    }
    printf("Codice fiscale non trovato.\n");
}

void filtra_per_reddito(Persona persone[], int n_persone, int reddito)
{
    int trovato = 0;
    for (int i = 0; i < n_persone; i++)
    {
        if (persone[i].reddito_annuo >= reddito)
        {
            stampa_persona(persone[i]);
            trovato = 1;
        }
    }
    if (!trovato)
        printf("Nessuna persona con reddito >= %d\n", reddito);
}

double calcola_media_redditi(Persona persone[], int n_persone)
{
    int somma = 0;
    for (int i = 0; i < n_persone; i++)
        somma += persone[i].reddito_annuo;
    return (double)somma / n_persone;
}

void visualizza_per_anno(Persona persone[], int n_persone, int anno)
{
    int trovato = 0;
    for (int i = 0; i < n_persone; i++)
    {
        if (persone[i].anno_nascita == anno)
        {
            stampa_persona(persone[i]);
            trovato = 1;
        }
    }
    if (!trovato)
        printf("Nessuna persona trovata per l'anno %d\n", anno);
}